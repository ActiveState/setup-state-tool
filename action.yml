name: "Setup ActiveState CLI"
description: "Sets up the ActiveState CLI in your GitHub Actions workflow."
inputs:
  version:
    description: "Version of the state CLI to install"
    required: false
  channel:
    description: "Channel to download the state CLI from"
    required: false
    default: "release"
  # activestate-api-key:
  #   description: "API key used to authenticate to the ActiveState platform"
  #   required: true
runs:
  using: "composite"
  steps:
  - name: "Install state CLI (Linux & Darwin)"
    if: runner.os == 'Linux' || runner.os == 'macOS'
    shell: "bash"
    run: |
      installArgs=""
      if [ "${{ inputs.version }}" ]; then
        installArgs="-v ${{ inputs.version }} "
      fi
      CHANNEL="${{ inputs.channel }}"
      installArgs="${installArgs}-b $CHANNEL"
      sh <(curl -q https://platform.activestate.com/dl/cli/install.sh) $installArgs
      ln -s "$HOME/.local/ActiveState/StateTool/$CHANNEL/bin/state" /usr/local/bin/state
  - name: "Install state CLI (Windows)"
    if: runner.os == 'Windows'
    shell: "pwsh"
    run: |
      $installArgs = "-n "
      if ( "${{ inputs.version }}" )
      {
        $installArgs = "${installArgs}-v ${{ inputs.version }} "
      }
      $CHANNEL = "${{ inputs.channel }}"
      $installArgs = "${installArgs}-b $CHANNEL"
      (New-Object Net.WebClient).DownloadFile("https://platform.activestate.com/dl/cli/install.ps1", "install.ps1"); 
      Invoke-Expression -Command ".\install.ps1 -n $installArgs"
      echo "$env:LOCALAPPDATA\ActiveState\StateTool\$CHANNEL\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
